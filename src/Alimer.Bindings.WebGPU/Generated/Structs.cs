// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System.Runtime.InteropServices;
using System.Runtime.CompilerServices;
using System.Diagnostics.CodeAnalysis;

#pragma warning disable CS0649
namespace WebGPU;

public partial struct WGPUStringView
{
	public unsafe byte* data;
	public nuint length;
}

public partial struct WGPUAdapterInfo
{
	public unsafe WGPUChainedStructOut* nextInChain;
	public WGPUStringView vendor;
	public WGPUStringView architecture;
	public WGPUStringView device;
	public WGPUStringView description;
	public WGPUBackendType backendType;
	public WGPUAdapterType adapterType;
	public uint vendorID;
	public uint deviceID;
}

public partial struct WGPUBindGroupEntry
{
	public unsafe WGPUChainedStruct* nextInChain;
	public uint binding;
	public WGPUBuffer buffer;
	public ulong offset;
	public ulong size;
	public WGPUSampler sampler;
	public WGPUTextureView textureView;
}

public partial struct WGPUBlendComponent
{
	public WGPUBlendOperation operation;
	public WGPUBlendFactor srcFactor;
	public WGPUBlendFactor dstFactor;
}

public partial struct WGPUBufferBindingLayout
{
	public unsafe WGPUChainedStruct* nextInChain;
	public WGPUBufferBindingType type;
	public WGPUBool hasDynamicOffset;
	public ulong minBindingSize;
}

public partial struct WGPUBufferDescriptor
{
	public unsafe WGPUChainedStruct* nextInChain;
	public WGPUStringView label;
	public WGPUBufferUsage usage;
	public ulong size;
	public WGPUBool mappedAtCreation;
}

public partial struct WGPUColor
{
	public double r;
	public double g;
	public double b;
	public double a;
}

public partial struct WGPUCommandBufferDescriptor
{
	public unsafe WGPUChainedStruct* nextInChain;
	public WGPUStringView label;
}

public partial struct WGPUCommandEncoderDescriptor
{
	public unsafe WGPUChainedStruct* nextInChain;
	public WGPUStringView label;
}

public partial struct WGPUCompilationMessage
{
	public unsafe WGPUChainedStruct* nextInChain;
	public WGPUStringView message;
	public WGPUCompilationMessageType type;
	public ulong lineNum;
	public ulong linePos;
	public ulong offset;
	public ulong length;
}

public partial struct WGPUComputePassTimestampWrites
{
	public WGPUQuerySet querySet;
	public uint beginningOfPassWriteIndex;
	public uint endOfPassWriteIndex;
}

public partial struct WGPUConstantEntry
{
	public unsafe WGPUChainedStruct* nextInChain;
	public WGPUStringView key;
	public double value;
}

public partial struct WGPUExtent3D
{
	public uint width;
	public uint height;
	public uint depthOrArrayLayers;
}

public partial struct WGPUFuture
{
	public ulong id;
}

public partial struct WGPUInstanceCapabilities
{
	public unsafe WGPUChainedStructOut* nextInChain;
	public WGPUBool timedWaitAnyEnable;
	public nuint timedWaitAnyMaxCount;
}

public partial struct WGPULimits
{
	public unsafe WGPUChainedStructOut* nextInChain;
	public uint maxTextureDimension1D;
	public uint maxTextureDimension2D;
	public uint maxTextureDimension3D;
	public uint maxTextureArrayLayers;
	public uint maxBindGroups;
	public uint maxBindGroupsPlusVertexBuffers;
	public uint maxBindingsPerBindGroup;
	public uint maxDynamicUniformBuffersPerPipelineLayout;
	public uint maxDynamicStorageBuffersPerPipelineLayout;
	public uint maxSampledTexturesPerShaderStage;
	public uint maxSamplersPerShaderStage;
	public uint maxStorageBuffersPerShaderStage;
	public uint maxStorageTexturesPerShaderStage;
	public uint maxUniformBuffersPerShaderStage;
	public ulong maxUniformBufferBindingSize;
	public ulong maxStorageBufferBindingSize;
	public uint minUniformBufferOffsetAlignment;
	public uint minStorageBufferOffsetAlignment;
	public uint maxVertexBuffers;
	public ulong maxBufferSize;
	public uint maxVertexAttributes;
	public uint maxVertexBufferArrayStride;
	public uint maxInterStageShaderVariables;
	public uint maxColorAttachments;
	public uint maxColorAttachmentBytesPerSample;
	public uint maxComputeWorkgroupStorageSize;
	public uint maxComputeInvocationsPerWorkgroup;
	public uint maxComputeWorkgroupSizeX;
	public uint maxComputeWorkgroupSizeY;
	public uint maxComputeWorkgroupSizeZ;
	public uint maxComputeWorkgroupsPerDimension;
}

public partial struct WGPUMultisampleState
{
	public unsafe WGPUChainedStruct* nextInChain;
	public uint count;
	public uint mask;
	public WGPUBool alphaToCoverageEnabled;
}

public partial struct WGPUOrigin3D
{
	public uint x;
	public uint y;
	public uint z;
}

public partial struct WGPUPipelineLayoutDescriptor
{
	public unsafe WGPUChainedStruct* nextInChain;
	public WGPUStringView label;
	public nuint bindGroupLayoutCount;
	public unsafe WGPUBindGroupLayout* bindGroupLayouts;
}

public partial struct WGPUPrimitiveState
{
	public unsafe WGPUChainedStruct* nextInChain;
	public WGPUPrimitiveTopology topology;
	public WGPUIndexFormat stripIndexFormat;
	public WGPUFrontFace frontFace;
	public WGPUCullMode cullMode;
	public WGPUBool unclippedDepth;
}

public partial struct WGPUQuerySetDescriptor
{
	public unsafe WGPUChainedStruct* nextInChain;
	public WGPUStringView label;
	public WGPUQueryType type;
	public uint count;
}

public partial struct WGPUQueueDescriptor
{
	public unsafe WGPUChainedStruct* nextInChain;
	public WGPUStringView label;
}

public partial struct WGPURenderBundleDescriptor
{
	public unsafe WGPUChainedStruct* nextInChain;
	public WGPUStringView label;
}

public partial struct WGPURenderBundleEncoderDescriptor
{
	public unsafe WGPUChainedStruct* nextInChain;
	public WGPUStringView label;
	public nuint colorFormatCount;
	public unsafe WGPUTextureFormat* colorFormats;
	public WGPUTextureFormat depthStencilFormat;
	public uint sampleCount;
	public WGPUBool depthReadOnly;
	public WGPUBool stencilReadOnly;
}

public partial struct WGPURenderPassDepthStencilAttachment
{
	public WGPUTextureView view;
	public WGPULoadOp depthLoadOp;
	public WGPUStoreOp depthStoreOp;
	public float depthClearValue;
	public WGPUBool depthReadOnly;
	public WGPULoadOp stencilLoadOp;
	public WGPUStoreOp stencilStoreOp;
	public uint stencilClearValue;
	public WGPUBool stencilReadOnly;
}

public partial struct WGPURenderPassMaxDrawCount
{
	public WGPUChainedStruct chain;
	public ulong maxDrawCount;
}

public partial struct WGPURenderPassTimestampWrites
{
	public WGPUQuerySet querySet;
	public uint beginningOfPassWriteIndex;
	public uint endOfPassWriteIndex;
}

public partial struct WGPURequestAdapterOptions
{
	public unsafe WGPUChainedStruct* nextInChain;
	public WGPUFeatureLevel featureLevel;
	public WGPUPowerPreference powerPreference;
	public WGPUBool forceFallbackAdapter;
	public WGPUBackendType backendType;
	public WGPUSurface compatibleSurface;
}

public partial struct WGPUSamplerBindingLayout
{
	public unsafe WGPUChainedStruct* nextInChain;
	public WGPUSamplerBindingType type;
}

public partial struct WGPUSamplerDescriptor
{
	public unsafe WGPUChainedStruct* nextInChain;
	public WGPUStringView label;
	public WGPUAddressMode addressModeU;
	public WGPUAddressMode addressModeV;
	public WGPUAddressMode addressModeW;
	public WGPUFilterMode magFilter;
	public WGPUFilterMode minFilter;
	public WGPUMipmapFilterMode mipmapFilter;
	public float lodMinClamp;
	public float lodMaxClamp;
	public WGPUCompareFunction compare;
	public ushort maxAnisotropy;
}

public partial struct WGPUShaderModuleDescriptor
{
	public unsafe WGPUChainedStruct* nextInChain;
	public WGPUStringView label;
}

public partial struct WGPUShaderSourceSPIRV
{
	public WGPUChainedStruct chain;
	public uint codeSize;
	public unsafe uint* code;
}

public partial struct WGPUShaderSourceWGSL
{
	public WGPUChainedStruct chain;
	public WGPUStringView code;
}

public partial struct WGPUStencilFaceState
{
	public WGPUCompareFunction compare;
	public WGPUStencilOperation failOp;
	public WGPUStencilOperation depthFailOp;
	public WGPUStencilOperation passOp;
}

public partial struct WGPUStorageTextureBindingLayout
{
	public unsafe WGPUChainedStruct* nextInChain;
	public WGPUStorageTextureAccess access;
	public WGPUTextureFormat format;
	public WGPUTextureViewDimension viewDimension;
}

public partial struct WGPUSupportedFeatures
{
	public nuint featureCount;
	public unsafe WGPUFeatureName* features;
}

public partial struct WGPUSupportedWGSLLanguageFeatures
{
	public nuint featureCount;
	public unsafe WGPUWGSLLanguageFeatureName* features;
}

public partial struct WGPUSurfaceCapabilities
{
	public unsafe WGPUChainedStructOut* nextInChain;
	public WGPUTextureUsage usages;
	public nuint formatCount;
	public unsafe WGPUTextureFormat* formats;
	public nuint presentModeCount;
	public unsafe WGPUPresentMode* presentModes;
	public nuint alphaModeCount;
	public unsafe WGPUCompositeAlphaMode* alphaModes;
}

public partial struct WGPUSurfaceConfiguration
{
	public unsafe WGPUChainedStruct* nextInChain;
	public WGPUDevice device;
	public WGPUTextureFormat format;
	public WGPUTextureUsage usage;
	public uint width;
	public uint height;
	public nuint viewFormatCount;
	public unsafe WGPUTextureFormat* viewFormats;
	public WGPUCompositeAlphaMode alphaMode;
	public WGPUPresentMode presentMode;
}

public partial struct WGPUSurfaceDescriptor
{
	public unsafe WGPUChainedStruct* nextInChain;
	public WGPUStringView label;
}

public partial struct WGPUSurfaceSourceAndroidNativeWindow
{
	public WGPUChainedStruct chain;
	public unsafe void* window;
}

public partial struct WGPUSurfaceSourceMetalLayer
{
	public WGPUChainedStruct chain;
	public unsafe void* layer;
}

public partial struct WGPUSurfaceSourceWaylandSurface
{
	public WGPUChainedStruct chain;
	public unsafe void* display;
	public unsafe void* surface;
}

public partial struct WGPUSurfaceSourceWindowsHWND
{
	public WGPUChainedStruct chain;
	public unsafe void* hinstance;
	public unsafe void* hwnd;
}

public partial struct WGPUSurfaceSourceXCBWindow
{
	public WGPUChainedStruct chain;
	public unsafe void* connection;
	public uint window;
}

public partial struct WGPUSurfaceSourceXlibWindow
{
	public WGPUChainedStruct chain;
	public unsafe void* display;
	public ulong window;
}

public partial struct WGPUSurfaceTexture
{
	public unsafe WGPUChainedStructOut* nextInChain;
	public WGPUTexture texture;
	public WGPUSurfaceGetCurrentTextureStatus status;
}

public partial struct WGPUTexelCopyBufferLayout
{
	public ulong offset;
	public uint bytesPerRow;
	public uint rowsPerImage;
}

public partial struct WGPUTextureBindingLayout
{
	public unsafe WGPUChainedStruct* nextInChain;
	public WGPUTextureSampleType sampleType;
	public WGPUTextureViewDimension viewDimension;
	public WGPUBool multisampled;
}

public partial struct WGPUTextureViewDescriptor
{
	public unsafe WGPUChainedStruct* nextInChain;
	public WGPUStringView label;
	public WGPUTextureFormat format;
	public WGPUTextureViewDimension dimension;
	public uint baseMipLevel;
	public uint mipLevelCount;
	public uint baseArrayLayer;
	public uint arrayLayerCount;
	public WGPUTextureAspect aspect;
	public WGPUTextureUsage usage;
}

public partial struct WGPUVertexAttribute
{
	public WGPUVertexFormat format;
	public ulong offset;
	public uint shaderLocation;
}

public partial struct WGPUBindGroupDescriptor
{
	public unsafe WGPUChainedStruct* nextInChain;
	public WGPUStringView label;
	public WGPUBindGroupLayout layout;
	public nuint entryCount;
	public unsafe WGPUBindGroupEntry* entries;
}

public partial struct WGPUBindGroupLayoutEntry
{
	public unsafe WGPUChainedStruct* nextInChain;
	public uint binding;
	public WGPUShaderStage visibility;
	public WGPUBufferBindingLayout buffer;
	public WGPUSamplerBindingLayout sampler;
	public WGPUTextureBindingLayout texture;
	public WGPUStorageTextureBindingLayout storageTexture;
}

public partial struct WGPUBlendState
{
	public WGPUBlendComponent color;
	public WGPUBlendComponent alpha;
}

public partial struct WGPUCompilationInfo
{
	public unsafe WGPUChainedStruct* nextInChain;
	public nuint messageCount;
	public unsafe WGPUCompilationMessage* messages;
}

public partial struct WGPUComputePassDescriptor
{
	public unsafe WGPUChainedStruct* nextInChain;
	public WGPUStringView label;
	public unsafe WGPUComputePassTimestampWrites* timestampWrites;
}

public partial struct WGPUDepthStencilState
{
	public unsafe WGPUChainedStruct* nextInChain;
	public WGPUTextureFormat format;
	public WGPUOptionalBool depthWriteEnabled;
	public WGPUCompareFunction depthCompare;
	public WGPUStencilFaceState stencilFront;
	public WGPUStencilFaceState stencilBack;
	public uint stencilReadMask;
	public uint stencilWriteMask;
	public int depthBias;
	public float depthBiasSlopeScale;
	public float depthBiasClamp;
}

public partial struct WGPUDeviceDescriptor
{
	public unsafe WGPUChainedStruct* nextInChain;
	public WGPUStringView label;
	public nuint requiredFeatureCount;
	public unsafe WGPUFeatureName* requiredFeatures;
	public unsafe WGPULimits* requiredLimits;
	public WGPUQueueDescriptor defaultQueue;
	public WGPUDeviceLostCallbackInfo deviceLostCallbackInfo;
	public WGPUUncapturedErrorCallbackInfo uncapturedErrorCallbackInfo;
}

public partial struct WGPUFutureWaitInfo
{
	public WGPUFuture future;
	public WGPUBool completed;
}

public partial struct WGPUInstanceDescriptor
{
	public unsafe WGPUChainedStruct* nextInChain;
	public WGPUInstanceCapabilities features;
}

public partial struct WGPUProgrammableStageDescriptor
{
	public unsafe WGPUChainedStruct* nextInChain;
	public WGPUShaderModule module;
	public WGPUStringView entryPoint;
	public nuint constantCount;
	public unsafe WGPUConstantEntry* constants;
}

public partial struct WGPURenderPassColorAttachment
{
	public unsafe WGPUChainedStruct* nextInChain;
	public WGPUTextureView view;
	public uint depthSlice;
	public WGPUTextureView resolveTarget;
	public WGPULoadOp loadOp;
	public WGPUStoreOp storeOp;
	public WGPUColor clearValue;
}

public partial struct WGPUTexelCopyBufferInfo
{
	public WGPUTexelCopyBufferLayout layout;
	public WGPUBuffer buffer;
}

public partial struct WGPUTexelCopyTextureInfo
{
	public WGPUTexture texture;
	public uint mipLevel;
	public WGPUOrigin3D origin;
	public WGPUTextureAspect aspect;
}

public partial struct WGPUTextureDescriptor
{
	public unsafe WGPUChainedStruct* nextInChain;
	public WGPUStringView label;
	public WGPUTextureUsage usage;
	public WGPUTextureDimension dimension;
	public WGPUExtent3D size;
	public WGPUTextureFormat format;
	public uint mipLevelCount;
	public uint sampleCount;
	public nuint viewFormatCount;
	public unsafe WGPUTextureFormat* viewFormats;
}

public partial struct WGPUVertexBufferLayout
{
	public WGPUVertexStepMode stepMode;
	public ulong arrayStride;
	public nuint attributeCount;
	public unsafe WGPUVertexAttribute* attributes;
}

public partial struct WGPUBindGroupLayoutDescriptor
{
	public unsafe WGPUChainedStruct* nextInChain;
	public WGPUStringView label;
	public nuint entryCount;
	public unsafe WGPUBindGroupLayoutEntry* entries;
}

public partial struct WGPUColorTargetState
{
	public unsafe WGPUChainedStruct* nextInChain;
	public WGPUTextureFormat format;
	public unsafe WGPUBlendState* blend;
	public WGPUColorWriteMask writeMask;
}

public partial struct WGPUComputePipelineDescriptor
{
	public unsafe WGPUChainedStruct* nextInChain;
	public WGPUStringView label;
	public WGPUPipelineLayout layout;
	public WGPUProgrammableStageDescriptor compute;
}

public partial struct WGPURenderPassDescriptor
{
	public unsafe WGPUChainedStruct* nextInChain;
	public WGPUStringView label;
	public nuint colorAttachmentCount;
	public unsafe WGPURenderPassColorAttachment* colorAttachments;
	public unsafe WGPURenderPassDepthStencilAttachment* depthStencilAttachment;
	public WGPUQuerySet occlusionQuerySet;
	public unsafe WGPURenderPassTimestampWrites* timestampWrites;
}

public partial struct WGPUVertexState
{
	public unsafe WGPUChainedStruct* nextInChain;
	public WGPUShaderModule module;
	public WGPUStringView entryPoint;
	public nuint constantCount;
	public unsafe WGPUConstantEntry* constants;
	public nuint bufferCount;
	public unsafe WGPUVertexBufferLayout* buffers;
}

public partial struct WGPUFragmentState
{
	public unsafe WGPUChainedStruct* nextInChain;
	public WGPUShaderModule module;
	public WGPUStringView entryPoint;
	public nuint constantCount;
	public unsafe WGPUConstantEntry* constants;
	public nuint targetCount;
	public unsafe WGPUColorTargetState* targets;
}

public partial struct WGPURenderPipelineDescriptor
{
	public unsafe WGPUChainedStruct* nextInChain;
	public WGPUStringView label;
	public WGPUPipelineLayout layout;
	public WGPUVertexState vertex;
	public WGPUPrimitiveState primitive;
	public unsafe WGPUDepthStencilState* depthStencil;
	public WGPUMultisampleState multisample;
	public unsafe WGPUFragmentState* fragment;
}

public partial struct WGPUBufferMapCallbackInfo
{
	public unsafe WGPUChainedStruct* nextInChain;
	public WGPUCallbackMode mode;
	public unsafe delegate* unmanaged<WGPUMapAsyncStatus, WGPUStringView, void*, void*, void> callback;
	public unsafe void* userdata1;
	public unsafe void* userdata2;
}

public partial struct WGPUCompilationInfoCallbackInfo
{
	public unsafe WGPUChainedStruct* nextInChain;
	public WGPUCallbackMode mode;
	public unsafe delegate* unmanaged<WGPUCompilationInfoRequestStatus, WGPUCompilationInfo*, void*, void*, void> callback;
	public unsafe void* userdata1;
	public unsafe void* userdata2;
}

public partial struct WGPUCreateComputePipelineAsyncCallbackInfo
{
	public unsafe WGPUChainedStruct* nextInChain;
	public WGPUCallbackMode mode;
	public unsafe delegate* unmanaged<WGPUCreatePipelineAsyncStatus, WGPUComputePipeline, WGPUStringView, void*, void*, void> callback;
	public unsafe void* userdata1;
	public unsafe void* userdata2;
}

public partial struct WGPUCreateRenderPipelineAsyncCallbackInfo
{
	public unsafe WGPUChainedStruct* nextInChain;
	public WGPUCallbackMode mode;
	public unsafe delegate* unmanaged<WGPUCreatePipelineAsyncStatus, WGPURenderPipeline, WGPUStringView, void*, void*, void> callback;
	public unsafe void* userdata1;
	public unsafe void* userdata2;
}

public partial struct WGPUDeviceLostCallbackInfo
{
	public unsafe WGPUChainedStruct* nextInChain;
	public WGPUCallbackMode mode;
	public unsafe delegate* unmanaged<WGPUDevice*, WGPUDeviceLostReason, WGPUStringView, void*, void*, void> callback;
	public unsafe void* userdata1;
	public unsafe void* userdata2;
}

public partial struct WGPUPopErrorScopeCallbackInfo
{
	public unsafe WGPUChainedStruct* nextInChain;
	public WGPUCallbackMode mode;
	public unsafe delegate* unmanaged<WGPUPopErrorScopeStatus, WGPUErrorType, WGPUStringView, void*, void*, void> callback;
	public unsafe void* userdata1;
	public unsafe void* userdata2;
}

public partial struct WGPUQueueWorkDoneCallbackInfo
{
	public unsafe WGPUChainedStruct* nextInChain;
	public WGPUCallbackMode mode;
	public unsafe delegate* unmanaged<WGPUQueueWorkDoneStatus, void*, void*, void> callback;
	public unsafe void* userdata1;
	public unsafe void* userdata2;
}

public partial struct WGPURequestAdapterCallbackInfo
{
	public unsafe WGPUChainedStruct* nextInChain;
	public WGPUCallbackMode mode;
	public unsafe delegate* unmanaged<WGPURequestAdapterStatus, WGPUAdapter, WGPUStringView, void*, void*, void> callback;
	public unsafe void* userdata1;
	public unsafe void* userdata2;
}

public partial struct WGPURequestDeviceCallbackInfo
{
	public unsafe WGPUChainedStruct* nextInChain;
	public WGPUCallbackMode mode;
	public unsafe delegate* unmanaged<WGPURequestDeviceStatus, WGPUDevice, WGPUStringView, void*, void*, void> callback;
	public unsafe void* userdata1;
	public unsafe void* userdata2;
}

public partial struct WGPUUncapturedErrorCallbackInfo
{
	public unsafe WGPUChainedStruct* nextInChain;
	public unsafe delegate* unmanaged<WGPUDevice*, WGPUErrorType, WGPUStringView, void*, void*, void> callback;
	public unsafe void* userdata1;
	public unsafe void* userdata2;
}

public partial struct WGPUChainedStruct
{
	public unsafe WGPUChainedStruct* next;
	public WGPUSType sType;
}

public partial struct WGPUChainedStructOut
{
	public unsafe WGPUChainedStructOut* next;
	public WGPUSType sType;
}

public partial struct WGPUInstanceExtras
{
	public WGPUChainedStruct chain;
	public WGPUInstanceBackend backends;
	public WGPUInstanceFlag flags;
	public WGPUDx12Compiler dx12ShaderCompiler;
	public WGPUGles3MinorVersion gles3MinorVersion;
	public WGPUStringView dxilPath;
	public WGPUStringView dxcPath;
}

public partial struct WGPUDeviceExtras
{
	public WGPUChainedStruct chain;
	public WGPUStringView tracePath;
}

public partial struct WGPUNativeLimits
{
	public WGPUChainedStructOut chain;
	public uint maxPushConstantSize;
	public uint maxNonSamplerBindings;
}

public partial struct WGPUPushConstantRange
{
	public WGPUShaderStage stages;
	public uint start;
	public uint end;
}

public partial struct WGPUPipelineLayoutExtras
{
	public WGPUChainedStruct chain;
	public nuint pushConstantRangeCount;
	public unsafe WGPUPushConstantRange* pushConstantRanges;
}

public partial struct WGPUShaderDefine
{
	public WGPUStringView name;
	public WGPUStringView value;
}

public partial struct WGPUShaderModuleGLSLDescriptor
{
	public WGPUChainedStruct chain;
	public WGPUShaderStage stage;
	public WGPUStringView code;
	public uint defineCount;
	public unsafe WGPUShaderDefine* defines;
}

public partial struct WGPUShaderModuleDescriptorSpirV
{
	public WGPUStringView label;
	public uint sourceSize;
	public unsafe uint* source;
}

public partial struct WGPURegistryReport
{
	public nuint numAllocated;
	public nuint numKeptFromUser;
	public nuint numReleasedFromUser;
	public nuint elementSize;
}

public partial struct WGPUHubReport
{
	public WGPURegistryReport adapters;
	public WGPURegistryReport devices;
	public WGPURegistryReport queues;
	public WGPURegistryReport pipelineLayouts;
	public WGPURegistryReport shaderModules;
	public WGPURegistryReport bindGroupLayouts;
	public WGPURegistryReport bindGroups;
	public WGPURegistryReport commandBuffers;
	public WGPURegistryReport renderBundles;
	public WGPURegistryReport renderPipelines;
	public WGPURegistryReport computePipelines;
	public WGPURegistryReport pipelineCaches;
	public WGPURegistryReport querySets;
	public WGPURegistryReport buffers;
	public WGPURegistryReport textures;
	public WGPURegistryReport textureViews;
	public WGPURegistryReport samplers;
}

public partial struct WGPUGlobalReport
{
	public WGPURegistryReport surfaces;
	public WGPUHubReport hub;
}

public partial struct WGPUInstanceEnumerateAdapterOptions
{
	public unsafe WGPUChainedStruct* nextInChain;
	public WGPUInstanceBackend backends;
}

public partial struct WGPUBindGroupEntryExtras
{
	public WGPUChainedStruct chain;
	public unsafe WGPUBuffer* buffers;
	public nuint bufferCount;
	public unsafe WGPUSampler* samplers;
	public nuint samplerCount;
	public unsafe WGPUTextureView* textureViews;
	public nuint textureViewCount;
}

public partial struct WGPUBindGroupLayoutEntryExtras
{
	public WGPUChainedStruct chain;
	public uint count;
}

public partial struct WGPUQuerySetDescriptorExtras
{
	public WGPUChainedStruct chain;
	public unsafe WGPUPipelineStatisticName* pipelineStatistics;
	public nuint pipelineStatisticCount;
}

public partial struct WGPUSurfaceConfigurationExtras
{
	public WGPUChainedStruct chain;
	public uint desiredMaximumFrameLatency;
}

